# Generated by Django 3.1.4 on 2021-04-11 12:37

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('survey', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Attribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=50)),
                ('value', models.CharField(default='', max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='BadCombo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='CommentAnnotatation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.JSONField()),
            ],
        ),
        migrations.CreateModel(
            name='Dict',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('json', models.JSONField()),
            ],
        ),
        migrations.CreateModel(
            name='ElementChoice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_index', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='FeatureScore',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(default='default_namee')),
                ('score', models.IntegerField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ListCateg',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='MturkUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Option',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=50)),
                ('text', models.CharField(default='', max_length=50)),
                ('score', models.IntegerField(null=True)),
                ('attributes', models.ManyToManyField(related_name='combo_attributes', to='survey.Attribute')),
            ],
        ),
        migrations.CreateModel(
            name='RangeCateg',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('minVal', models.FloatField()),
                ('maxVal', models.FloatField()),
                ('unit', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='RuleSet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('same_categories', models.IntegerField(default=2, null=True)),
                ('creation_time', models.DateTimeField(auto_now=True)),
                ('number_of_answers', models.IntegerField(default=0, null=True)),
                ('scenario_size', models.IntegerField(default=2, null=True)),
                ('generative', models.BooleanField(default=False)),
                ('rule_title', models.TextField(default='Default description')),
                ('prompt', models.TextField(default='Default prompt!')),
                ('badcombos', models.ManyToManyField(to='survey.BadCombo')),
                ('choice_categs', models.ManyToManyField(to='survey.ListCateg')),
                ('range_categs', models.ManyToManyField(to='survey.RangeCateg')),
            ],
        ),
        migrations.CreateModel(
            name='RuleSetChoice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('index', models.IntegerField()),
                ('value', models.CharField(max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='Scenario',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('options', models.ManyToManyField(to='survey.Option')),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_time', models.DateTimeField()),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TempScenarios',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField()),
                ('session_id', models.IntegerField()),
                ('ruleset_id', models.IntegerField()),
                ('scenario', models.ManyToManyField(to='survey.Scenario')),
            ],
        ),
        migrations.CreateModel(
            name='SurveyGenerator',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('combos', models.ManyToManyField(related_name='combo_dict', to='survey.Dict')),
                ('config', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='config_dict', to='survey.dict')),
                ('list_categs', models.ManyToManyField(to='survey.ListCateg')),
                ('range_categs', models.ManyToManyField(to='survey.RangeCateg')),
                ('rule', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='survey.ruleset')),
            ],
        ),
        migrations.CreateModel(
            name='Survey',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prompt', models.CharField(default='', max_length=200)),
                ('desc', models.TextField(default='')),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
                ('ruleset_id', models.IntegerField(default=2)),
                ('feature_scores', models.ManyToManyField(to='survey.FeatureScore')),
                ('scenarios', models.ManyToManyField(to='survey.Scenario')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='ruleset',
            name='scenarios',
            field=models.ManyToManyField(to='survey.Scenario'),
        ),
        migrations.AddField(
            model_name='ruleset',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='OneComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dataset_index', models.IntegerField()),
                ('comment_index', models.IntegerField()),
                ('current', models.IntegerField(default=0)),
                ('responses', models.ManyToManyField(to='survey.CommentAnnotatation')),
                ('taken_users', models.ManyToManyField(to='survey.MturkUser')),
            ],
        ),
        migrations.AddField(
            model_name='listcateg',
            name='choices',
            field=models.ManyToManyField(to='survey.RuleSetChoice'),
        ),
        migrations.CreateModel(
            name='BadSubComboElement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('categ', models.CharField(max_length=100)),
                ('elems', models.ManyToManyField(to='survey.ElementChoice')),
            ],
        ),
        migrations.CreateModel(
            name='BadSubCombo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('categ', models.CharField(max_length=500)),
                ('badcombo_elems', models.ManyToManyField(to='survey.BadSubComboElement')),
            ],
        ),
        migrations.AddField(
            model_name='badcombo',
            name='subcombos',
            field=models.ManyToManyField(to='survey.BadSubCombo'),
        ),
    ]
